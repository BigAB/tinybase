// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Types with schemas 1`] = `
[
  "27:0",
  "Conversion of type 'number | undefined' to type 'string' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 2`] = `
[
  "28:0",
  "Conversion of type 'string' to type 'undefined' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 3`] = `
[
  "29:37",
  "Property 'c2' does not exist on type 'RowFromSchema<{ readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }, "t1", false>'.",
]
`;

exports[`Types with schemas 4`] = `
[
  "30:29",
  "Property 't2' does not exist on type 'TablesFromSchema<{ readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }>'.",
]
`;

exports[`Types with schemas 5`] = `
[
  "31:29",
  "Property 't2' does not exist on type 'TablesFromSchema<{ readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }>'.",
]
`;

exports[`Types with schemas 6`] = `
[
  "34:40",
  "Argument of type '"t2"' is not assignable to parameter of type '"t1"'.",
]
`;

exports[`Types with schemas 7`] = `
[
  "37:26",
  "Argument of type '"t2"' is not assignable to parameter of type '"t1"'.",
]
`;

exports[`Types with schemas 8`] = `
[
  "43:0",
  "Conversion of type 'number | undefined' to type 'string' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 9`] = `
[
  "44:0",
  "Conversion of type 'string' to type 'undefined' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 10`] = `
[
  "45:26",
  "Argument of type '"t2"' is not assignable to parameter of type '"t1"'.",
]
`;

exports[`Types with schemas 11`] = `
[
  "48:27",
  "Argument of type '"t2"' is not assignable to parameter of type '"t1"'.",
]
`;

exports[`Types with schemas 12`] = `
[
  "51:39",
  "Argument of type '"c2"' is not assignable to parameter of type '"c1" | "c1d" | undefined'.",
]
`;

exports[`Types with schemas 13`] = `
[
  "52:33",
  "Argument of type '"t2"' is not assignable to parameter of type '"t1"'.",
]
`;

exports[`Types with schemas 14`] = `
[
  "55:24",
  "Argument of type '"t2"' is not assignable to parameter of type '"t1"'.",
]
`;

exports[`Types with schemas 15`] = `
[
  "61:0",
  "Conversion of type 'number | undefined' to type 'string' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 16`] = `
[
  "62:0",
  "Conversion of type 'string' to type 'undefined' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 17`] = `
[
  "63:24",
  "Argument of type '"t2"' is not assignable to parameter of type '"t1"'.",
]
`;

exports[`Types with schemas 18`] = `
[
  "66:49",
  "Argument of type '"c2"' is not assignable to parameter of type '"c1" | "c1d"'.",
]
`;

exports[`Types with schemas 19`] = `
[
  "67:28",
  "Argument of type '"t2"' is not assignable to parameter of type '"t1"'.",
]
`;

exports[`Types with schemas 20`] = `
[
  "70:37",
  "Argument of type '"c2"' is not assignable to parameter of type '"c1" | "c1d"'.",
]
`;

exports[`Types with schemas 21`] = `
[
  "71:25",
  "Argument of type '"t2"' is not assignable to parameter of type '"t1"'.",
]
`;

exports[`Types with schemas 22`] = `
[
  "76:0",
  "Conversion of type 'DefaultedCellFromSchema<{ readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }, "t1", "c1">' to type 'string' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 23`] = `
[
  "77:0",
  "Conversion of type 'string' to type 'undefined' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 24`] = `
[
  "78:37",
  "Argument of type '"c2"' is not assignable to parameter of type '"c1" | "c1d"'.",
]
`;

exports[`Types with schemas 25`] = `
[
  "79:25",
  "Argument of type '"t2"' is not assignable to parameter of type '"t1"'.",
]
`;

exports[`Types with schemas 26`] = `
[
  "85:0",
  "Conversion of type 'number | undefined' to type 'string' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 27`] = `
[
  "86:0",
  "Conversion of type 'string' to type 'undefined' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 28`] = `
[
  "87:29",
  "Property 'v2' does not exist on type 'ValuesFromSchema<{ readonly v1: { readonly type: "number"; }; readonly v1d: { readonly type: "string"; readonly default: ""; }; }>'.",
]
`;

exports[`Types with schemas 29`] = `
[
  "90:40",
  "Argument of type '"v2"' is not assignable to parameter of type '"v1" | "v1d"'.",
]
`;

exports[`Types with schemas 30`] = `
[
  "93:26",
  "Argument of type '"v2"' is not assignable to parameter of type '"v1" | "v1d"'.",
]
`;

exports[`Types with schemas 31`] = `
[
  "98:0",
  "Conversion of type 'DefaultedValueFromSchema<{ readonly v1: { readonly type: "number"; }; readonly v1d: { readonly type: "string"; readonly default: ""; }; }, "v1">' to type 'string' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 32`] = `
[
  "99:0",
  "Conversion of type 'string' to type 'undefined' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 33`] = `
[
  "100:26",
  "Argument of type '"v2"' is not assignable to parameter of type '"v1" | "v1d"'.",
]
`;

exports[`Types with schemas 34`] = `
[
  "105:38",
  "Type '{ c2: number; }' is not assignable to type 'RowFromSchema<{ readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }, "t1", true>'.",
]
`;

exports[`Types with schemas 35`] = `
[
  "106:38",
  "Type 'string' is not assignable to type 'number'.",
]
`;

exports[`Types with schemas 36`] = `
[
  "107:28",
  "Argument of type '{ t2: { r2: { c2: number; }; }; }' is not assignable to parameter of type 'TablesFromSchema<{ readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }, true>'.",
]
`;

exports[`Types with schemas 37`] = `
[
  "110:38",
  "Type '{ c2: number; }' is not assignable to type 'RowFromSchema<{ readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }, "t1", true>'.",
]
`;

exports[`Types with schemas 38`] = `
[
  "111:38",
  "Type 'string' is not assignable to type 'number'.",
]
`;

exports[`Types with schemas 39`] = `
[
  "112:26",
  "Argument of type '"t2"' is not assignable to parameter of type '"t1"'.",
]
`;

exports[`Types with schemas 40`] = `
[
  "115:26",
  "Argument of type '"t2"' is not assignable to parameter of type '"t1"'.",
]
`;

exports[`Types with schemas 41`] = `
[
  "118:37",
  "Argument of type '{ c2: number; }' is not assignable to parameter of type 'RowFromSchema<{ readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }, "t1", true>'.",
]
`;

exports[`Types with schemas 42`] = `
[
  "119:37",
  "Type 'string' is not assignable to type 'number'.",
]
`;

exports[`Types with schemas 43`] = `
[
  "120:24",
  "Argument of type '"t2"' is not assignable to parameter of type '"t1"'.",
]
`;

exports[`Types with schemas 44`] = `
[
  "123:31",
  "Argument of type '{ c2: number; }' is not assignable to parameter of type 'RowFromSchema<{ readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }, "t1", true>'.",
]
`;

exports[`Types with schemas 45`] = `
[
  "124:31",
  "Type 'string' is not assignable to type 'number'.",
]
`;

exports[`Types with schemas 46`] = `
[
  "125:24",
  "Argument of type '"t2"' is not assignable to parameter of type '"t1"'.",
]
`;

exports[`Types with schemas 47`] = `
[
  "128:44",
  "Argument of type '{ c2: number; }' is not assignable to parameter of type 'RowFromSchema<{ readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }, "t1", true>'.",
]
`;

exports[`Types with schemas 48`] = `
[
  "129:44",
  "Type 'string' is not assignable to type 'number'.",
]
`;

exports[`Types with schemas 49`] = `
[
  "130:31",
  "Argument of type '"t2"' is not assignable to parameter of type '"t1"'.",
]
`;

exports[`Types with schemas 50`] = `
[
  "133:24",
  "Argument of type '"t2"' is not assignable to parameter of type '"t1"'.",
]
`;

exports[`Types with schemas 51`] = `
[
  "137:37",
  "Argument of type '"c2"' is not assignable to parameter of type '"c1" | "c1d"'.",
]
`;

exports[`Types with schemas 52`] = `
[
  "138:43",
  "Argument of type 'string' is not assignable to parameter of type 'number | ((cell: number | undefined) => number)'.",
]
`;

exports[`Types with schemas 53`] = `
[
  "139:43",
  "Argument of type '() => string' is not assignable to parameter of type 'number | ((cell: number | undefined) => number)'.",
]
`;

exports[`Types with schemas 54`] = `
[
  "140:25",
  "Argument of type '"t2"' is not assignable to parameter of type '"t1"'.",
]
`;

exports[`Types with schemas 55`] = `
[
  "143:37",
  "Argument of type '"c2"' is not assignable to parameter of type '"c1" | "c1d"'.",
]
`;

exports[`Types with schemas 56`] = `
[
  "144:25",
  "Argument of type '"t2"' is not assignable to parameter of type '"t1"'.",
]
`;

exports[`Types with schemas 57`] = `
[
  "147:28",
  "Type 'string' is not assignable to type 'number'.",
]
`;

exports[`Types with schemas 58`] = `
[
  "148:28",
  "Argument of type '{ v2: number; }' is not assignable to parameter of type 'ValuesFromSchema<{ readonly v1: { readonly type: "number"; }; readonly v1d: { readonly type: "string"; readonly default: ""; }; }, true>'.",
]
`;

exports[`Types with schemas 59`] = `
[
  "151:35",
  "Type 'string' is not assignable to type 'number'.",
]
`;

exports[`Types with schemas 60`] = `
[
  "152:35",
  "Argument of type '{ v2: number; }' is not assignable to parameter of type 'ValuesFromSchema<{ readonly v1: { readonly type: "number"; }; readonly v1d: { readonly type: "string"; readonly default: ""; }; }, true>'.",
]
`;

exports[`Types with schemas 61`] = `
[
  "156:32",
  "Argument of type 'string' is not assignable to parameter of type 'number | ((value: number | undefined) => number)'.",
]
`;

exports[`Types with schemas 62`] = `
[
  "157:32",
  "Argument of type '() => string' is not assignable to parameter of type 'number | ((value: number | undefined) => number)'.",
]
`;

exports[`Types with schemas 63`] = `
[
  "158:26",
  "Argument of type '"v2"' is not assignable to parameter of type '"v1" | "v1d"'.",
]
`;

exports[`Types with schemas 64`] = `
[
  "161:26",
  "Argument of type '"v2"' is not assignable to parameter of type '"v1" | "v1d"'.",
]
`;

exports[`Types with schemas 65`] = `
[
  "167:2",
  "This comparison appears to be unintentional because the types '"t1"' and '"t2"' have no overlap.",
]
`;

exports[`Types with schemas 66`] = `
[
  "172:8",
  "Conversion of type 'number' to type 'string' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 67`] = `
[
  "173:8",
  "Conversion of type 'number' to type 'undefined' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 68`] = `
[
  "177:8",
  "Conversion of type 'string' to type 'number' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 69`] = `
[
  "178:8",
  "Conversion of type 'string' to type 'undefined' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 70`] = `
[
  "180:6",
  "This comparison appears to be unintentional because the types '"c1" | "c1d"' and '"c2"' have no overlap.",
]
`;

exports[`Types with schemas 71`] = `
[
  "189:6",
  "Conversion of type 'number' to type 'string' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 72`] = `
[
  "190:6",
  "Conversion of type 'number' to type 'undefined' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 73`] = `
[
  "194:6",
  "Conversion of type 'string' to type 'number' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 74`] = `
[
  "195:6",
  "Conversion of type 'string' to type 'undefined' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 75`] = `
[
  "197:4",
  "This comparison appears to be unintentional because the types '"c1" | "c1d"' and '"c2"' have no overlap.",
]
`;

exports[`Types with schemas 76`] = `
[
  "200:28",
  "Argument of type '"t2"' is not assignable to parameter of type '"t1"'.",
]
`;

exports[`Types with schemas 77`] = `
[
  "205:4",
  "Conversion of type 'number' to type 'string' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 78`] = `
[
  "206:4",
  "Conversion of type 'number' to type 'undefined' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 79`] = `
[
  "210:4",
  "Conversion of type 'string' to type 'number' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 80`] = `
[
  "211:4",
  "Conversion of type 'string' to type 'undefined' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 81`] = `
[
  "213:2",
  "This comparison appears to be unintentional because the types '"c1" | "c1d"' and '"c2"' have no overlap.",
]
`;

exports[`Types with schemas 82`] = `
[
  "215:29",
  "Argument of type '"t2"' is not assignable to parameter of type '"t1"'.",
]
`;

exports[`Types with schemas 83`] = `
[
  "220:4",
  "Conversion of type 'number' to type 'string' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 84`] = `
[
  "221:4",
  "Conversion of type 'number' to type 'undefined' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 85`] = `
[
  "225:4",
  "Conversion of type 'string' to type 'number' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 86`] = `
[
  "226:4",
  "Conversion of type 'string' to type 'undefined' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 87`] = `
[
  "228:2",
  "This comparison appears to be unintentional because the types '"v1" | "v1d"' and '"c2"' have no overlap.",
]
`;

exports[`Types with schemas 88`] = `
[
  "240:4",
  "Conversion of type '[string, string] | undefined' to type '[string, undefined]' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 89`] = `
[
  "241:4",
  "Conversion of type '[string, string] | undefined' to type '[undefined, string]' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 90`] = `
[
  "242:4",
  "Conversion of type '[string, string] | undefined' to type '[undefined, undefined]' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 91`] = `
[
  "243:4",
  "Conversion of type '[DefaultedCellFromSchema<{ readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }, "t1", "c1">, DefaultedCellFromSchema<...>] | undefined' to type '[string, string]' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 92`] = `
[
  "244:4",
  "Conversion of type '[string, string] | undefined' to type '[number, number]' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 93`] = `
[
  "250:4",
  "Conversion of type '[string, string] | undefined' to type '[string, undefined]' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 94`] = `
[
  "251:4",
  "Conversion of type '[string, string] | undefined' to type '[undefined, string]' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 95`] = `
[
  "252:4",
  "Conversion of type '[string, string] | undefined' to type '[undefined, undefined]' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 96`] = `
[
  "253:4",
  "Conversion of type '[DefaultedValueFromSchema<{ readonly v1: { readonly type: "number"; }; readonly v1d: { readonly type: "string"; readonly default: ""; }; }, "v1">, DefaultedValueFromSchema<{ readonly v1: { ...; }; readonly v1d: { ...; }; }, "v1">] | undefined' to type '[string, string]' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 97`] = `
[
  "254:4",
  "Conversion of type '[string, string] | undefined' to type '[number, number]' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;
