// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Types with schemas 1`] = `
[
  "29:0",
  "Conversion of type 'number | undefined' to type 'string' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 2`] = `
[
  "30:0",
  "Conversion of type 'string' to type 'undefined' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 3`] = `
[
  "31:37",
  "Property 'c2' does not exist on type 'RowFromSchema<{ readonly t0: { readonly c0: { readonly type: "number"; }; }; readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }, "t1", false>'.",
]
`;

exports[`Types with schemas 4`] = `
[
  "32:29",
  "Property 't2' does not exist on type 'TablesFromSchema<{ readonly t0: { readonly c0: { readonly type: "number"; }; }; readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }>'.",
]
`;

exports[`Types with schemas 5`] = `
[
  "33:29",
  "Property 't2' does not exist on type 'TablesFromSchema<{ readonly t0: { readonly c0: { readonly type: "number"; }; }; readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }>'.",
]
`;

exports[`Types with schemas 6`] = `
[
  "36:40",
  "Argument of type '"t2"' is not assignable to parameter of type '"t0" | "t1"'.",
]
`;

exports[`Types with schemas 7`] = `
[
  "39:26",
  "Argument of type '"t2"' is not assignable to parameter of type '"t0" | "t1"'.",
]
`;

exports[`Types with schemas 8`] = `
[
  "45:0",
  "Conversion of type 'number | undefined' to type 'string' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 9`] = `
[
  "46:0",
  "Conversion of type 'string' to type 'undefined' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 10`] = `
[
  "47:26",
  "Argument of type '"t2"' is not assignable to parameter of type '"t0" | "t1"'.",
]
`;

exports[`Types with schemas 11`] = `
[
  "50:27",
  "Argument of type '"t2"' is not assignable to parameter of type '"t0" | "t1"'.",
]
`;

exports[`Types with schemas 12`] = `
[
  "53:39",
  "Argument of type '"c2"' is not assignable to parameter of type '"c1" | "c1d" | undefined'.",
]
`;

exports[`Types with schemas 13`] = `
[
  "54:33",
  "Argument of type '"t2"' is not assignable to parameter of type '"t0" | "t1"'.",
]
`;

exports[`Types with schemas 14`] = `
[
  "57:24",
  "Argument of type '"t2"' is not assignable to parameter of type '"t0" | "t1"'.",
]
`;

exports[`Types with schemas 15`] = `
[
  "63:0",
  "Conversion of type 'number | undefined' to type 'string' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 16`] = `
[
  "64:0",
  "Conversion of type 'string' to type 'undefined' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 17`] = `
[
  "65:24",
  "Argument of type '"t2"' is not assignable to parameter of type '"t0" | "t1"'.",
]
`;

exports[`Types with schemas 18`] = `
[
  "68:49",
  "Argument of type '"c2"' is not assignable to parameter of type '"c1" | "c1d"'.",
]
`;

exports[`Types with schemas 19`] = `
[
  "69:28",
  "Argument of type '"t2"' is not assignable to parameter of type '"t0" | "t1"'.",
]
`;

exports[`Types with schemas 20`] = `
[
  "72:37",
  "Argument of type '"c2"' is not assignable to parameter of type '"c1" | "c1d"'.",
]
`;

exports[`Types with schemas 21`] = `
[
  "73:25",
  "Argument of type '"t2"' is not assignable to parameter of type '"t0" | "t1"'.",
]
`;

exports[`Types with schemas 22`] = `
[
  "78:0",
  "Conversion of type 'CellOrUndefined<{ readonly t0: { readonly c0: { readonly type: "number"; }; }; readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }, "t1", "c1", number>' to type 'string' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 23`] = `
[
  "79:37",
  "Argument of type '"c2"' is not assignable to parameter of type '"c1" | "c1d"'.",
]
`;

exports[`Types with schemas 24`] = `
[
  "80:25",
  "Argument of type '"t2"' is not assignable to parameter of type '"t0" | "t1"'.",
]
`;

exports[`Types with schemas 25`] = `
[
  "86:0",
  "Conversion of type 'number | undefined' to type 'string' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 26`] = `
[
  "87:0",
  "Conversion of type 'string' to type 'undefined' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 27`] = `
[
  "88:29",
  "Property 'v2' does not exist on type 'ValuesFromSchema<{ readonly v1: { readonly type: "number"; }; readonly v1d: { readonly type: "string"; readonly default: ""; }; }>'.",
]
`;

exports[`Types with schemas 28`] = `
[
  "91:40",
  "Argument of type '"v2"' is not assignable to parameter of type '"v1" | "v1d"'.",
]
`;

exports[`Types with schemas 29`] = `
[
  "94:26",
  "Argument of type '"v2"' is not assignable to parameter of type '"v1" | "v1d"'.",
]
`;

exports[`Types with schemas 30`] = `
[
  "99:0",
  "Conversion of type 'DefaultedValueFromSchema<{ readonly v1: { readonly type: "number"; }; readonly v1d: { readonly type: "string"; readonly default: ""; }; }, "v1">' to type 'string' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 31`] = `
[
  "100:0",
  "Conversion of type 'string' to type 'undefined' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 32`] = `
[
  "101:26",
  "Argument of type '"v2"' is not assignable to parameter of type '"v1" | "v1d"'.",
]
`;

exports[`Types with schemas 33`] = `
[
  "106:38",
  "Type '{ c2: number; }' is not assignable to type 'RowFromSchema<{ readonly t0: { readonly c0: { readonly type: "number"; }; }; readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }, "t1", true>'.",
]
`;

exports[`Types with schemas 34`] = `
[
  "107:38",
  "Type 'string' is not assignable to type 'number'.",
]
`;

exports[`Types with schemas 35`] = `
[
  "108:28",
  "Argument of type '{ t2: { r2: { c2: number; }; }; }' is not assignable to parameter of type 'TablesFromSchema<{ readonly t0: { readonly c0: { readonly type: "number"; }; }; readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }, true>'.",
]
`;

exports[`Types with schemas 36`] = `
[
  "111:38",
  "Type '{ c2: number; }' is not assignable to type 'RowFromSchema<{ readonly t0: { readonly c0: { readonly type: "number"; }; }; readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }, "t1", true>'.",
]
`;

exports[`Types with schemas 37`] = `
[
  "112:38",
  "Type 'string' is not assignable to type 'number'.",
]
`;

exports[`Types with schemas 38`] = `
[
  "113:26",
  "Argument of type '"t2"' is not assignable to parameter of type '"t0" | "t1"'.",
]
`;

exports[`Types with schemas 39`] = `
[
  "116:26",
  "Argument of type '"t2"' is not assignable to parameter of type '"t0" | "t1"'.",
]
`;

exports[`Types with schemas 40`] = `
[
  "119:37",
  "Argument of type '{ c2: number; }' is not assignable to parameter of type 'RowFromSchema<{ readonly t0: { readonly c0: { readonly type: "number"; }; }; readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }, "t1", true>'.",
]
`;

exports[`Types with schemas 41`] = `
[
  "120:37",
  "Type 'string' is not assignable to type 'number'.",
]
`;

exports[`Types with schemas 42`] = `
[
  "121:24",
  "Argument of type '"t2"' is not assignable to parameter of type '"t0" | "t1"'.",
]
`;

exports[`Types with schemas 43`] = `
[
  "124:31",
  "Argument of type '{ c2: number; }' is not assignable to parameter of type 'RowFromSchema<{ readonly t0: { readonly c0: { readonly type: "number"; }; }; readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }, "t1", true>'.",
]
`;

exports[`Types with schemas 44`] = `
[
  "125:31",
  "Type 'string' is not assignable to type 'number'.",
]
`;

exports[`Types with schemas 45`] = `
[
  "126:24",
  "Argument of type '"t2"' is not assignable to parameter of type '"t0" | "t1"'.",
]
`;

exports[`Types with schemas 46`] = `
[
  "129:44",
  "Argument of type '{ c2: number; }' is not assignable to parameter of type 'RowFromSchema<{ readonly t0: { readonly c0: { readonly type: "number"; }; }; readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }, "t1", true>'.",
]
`;

exports[`Types with schemas 47`] = `
[
  "130:44",
  "Type 'string' is not assignable to type 'number'.",
]
`;

exports[`Types with schemas 48`] = `
[
  "131:31",
  "Argument of type '"t2"' is not assignable to parameter of type '"t0" | "t1"'.",
]
`;

exports[`Types with schemas 49`] = `
[
  "134:24",
  "Argument of type '"t2"' is not assignable to parameter of type '"t0" | "t1"'.",
]
`;

exports[`Types with schemas 50`] = `
[
  "138:37",
  "Argument of type '"c2"' is not assignable to parameter of type '"c1" | "c1d"'.",
]
`;

exports[`Types with schemas 51`] = `
[
  "139:43",
  "Argument of type 'string' is not assignable to parameter of type 'number | ((cell: number | undefined) => number)'.",
]
`;

exports[`Types with schemas 52`] = `
[
  "140:43",
  "Argument of type '() => string' is not assignable to parameter of type 'number | ((cell: number | undefined) => number)'.",
]
`;

exports[`Types with schemas 53`] = `
[
  "141:25",
  "Argument of type '"t2"' is not assignable to parameter of type '"t0" | "t1"'.",
]
`;

exports[`Types with schemas 54`] = `
[
  "144:37",
  "Argument of type '"c2"' is not assignable to parameter of type '"c1" | "c1d"'.",
]
`;

exports[`Types with schemas 55`] = `
[
  "145:25",
  "Argument of type '"t2"' is not assignable to parameter of type '"t0" | "t1"'.",
]
`;

exports[`Types with schemas 56`] = `
[
  "148:28",
  "Type 'string' is not assignable to type 'number'.",
]
`;

exports[`Types with schemas 57`] = `
[
  "149:28",
  "Argument of type '{ v2: number; }' is not assignable to parameter of type 'ValuesFromSchema<{ readonly v1: { readonly type: "number"; }; readonly v1d: { readonly type: "string"; readonly default: ""; }; }, true>'.",
]
`;

exports[`Types with schemas 58`] = `
[
  "152:35",
  "Type 'string' is not assignable to type 'number'.",
]
`;

exports[`Types with schemas 59`] = `
[
  "153:35",
  "Argument of type '{ v2: number; }' is not assignable to parameter of type 'ValuesFromSchema<{ readonly v1: { readonly type: "number"; }; readonly v1d: { readonly type: "string"; readonly default: ""; }; }, true>'.",
]
`;

exports[`Types with schemas 60`] = `
[
  "157:32",
  "Argument of type 'string' is not assignable to parameter of type 'number | ((value: number | undefined) => number)'.",
]
`;

exports[`Types with schemas 61`] = `
[
  "158:32",
  "Argument of type '() => string' is not assignable to parameter of type 'number | ((value: number | undefined) => number)'.",
]
`;

exports[`Types with schemas 62`] = `
[
  "159:26",
  "Argument of type '"v2"' is not assignable to parameter of type '"v1" | "v1d"'.",
]
`;

exports[`Types with schemas 63`] = `
[
  "162:26",
  "Argument of type '"v2"' is not assignable to parameter of type '"v1" | "v1d"'.",
]
`;

exports[`Types with schemas 64`] = `
[
  "168:2",
  "This comparison appears to be unintentional because the types '"t0" | "t1"' and '"t2"' have no overlap.",
]
`;

exports[`Types with schemas 65`] = `
[
  "175:10",
  "Conversion of type 'number' to type 'string' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 66`] = `
[
  "176:10",
  "Conversion of type 'number' to type 'undefined' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 67`] = `
[
  "180:10",
  "Conversion of type 'string' to type 'number' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 68`] = `
[
  "181:10",
  "Conversion of type 'string' to type 'undefined' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 69`] = `
[
  "183:8",
  "This comparison appears to be unintentional because the types '"c1" | "c1d"' and '"c2"' have no overlap.",
]
`;

exports[`Types with schemas 70`] = `
[
  "188:8",
  "This comparison appears to be unintentional because the types '"c1" | "c1d"' and '"c2"' have no overlap.",
]
`;

exports[`Types with schemas 71`] = `
[
  "192:15",
  "Argument of type '(rowId: string) => void' is not assignable to parameter of type '(...params: [rowId: never, forEachCell: never] | [rowId: string, forEachCell: (cellCallback: ((...params: [cellId: never, cell: never] | [cellId: "c1", cell: number] | [cellId: "c1d", cell: string]) => void) | ((...params: [cellId: never] | [cellId: "c1"] | [cellId: "c1d"]) => void)) => void]) => void'.",
]
`;

exports[`Types with schemas 72`] = `
[
  "200:2",
  "This comparison appears to be unintentional because the types '"t0" | "t1"' and '"t2"' have no overlap.",
]
`;

exports[`Types with schemas 73`] = `
[
  "209:6",
  "Conversion of type 'number' to type 'string' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 74`] = `
[
  "210:6",
  "Conversion of type 'number' to type 'undefined' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 75`] = `
[
  "214:6",
  "Conversion of type 'string' to type 'number' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 76`] = `
[
  "215:6",
  "Conversion of type 'string' to type 'undefined' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 77`] = `
[
  "217:4",
  "This comparison appears to be unintentional because the types '"c1" | "c1d"' and '"c2"' have no overlap.",
]
`;

exports[`Types with schemas 78`] = `
[
  "222:4",
  "This comparison appears to be unintentional because the types '"c1" | "c1d"' and '"c2"' have no overlap.",
]
`;

exports[`Types with schemas 79`] = `
[
  "231:6",
  "Conversion of type 'number' to type 'string' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 80`] = `
[
  "232:6",
  "Conversion of type 'number' to type 'undefined' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 81`] = `
[
  "234:4",
  "This comparison appears to be unintentional because the types '"c0"' and '"c2"' have no overlap.",
]
`;

exports[`Types with schemas 82`] = `
[
  "238:4",
  "This comparison appears to be unintentional because the types '"c0"' and '"c2"' have no overlap.",
]
`;

exports[`Types with schemas 83`] = `
[
  "246:28",
  "Argument of type '"t2"' is not assignable to parameter of type '"t0" | "t1"'.",
]
`;

exports[`Types with schemas 84`] = `
[
  "251:4",
  "Conversion of type 'number' to type 'undefined' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 85`] = `
[
  "252:4",
  "Conversion of type 'number' to type 'string' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 86`] = `
[
  "256:4",
  "Conversion of type 'string' to type 'number' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 87`] = `
[
  "257:4",
  "Conversion of type 'string' to type 'undefined' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 88`] = `
[
  "259:2",
  "This comparison appears to be unintentional because the types '"c1" | "c1d"' and '"c2"' have no overlap.",
]
`;

exports[`Types with schemas 89`] = `
[
  "264:2",
  "This comparison appears to be unintentional because the types '"c1" | "c1d"' and '"c2"' have no overlap.",
]
`;

exports[`Types with schemas 90`] = `
[
  "269:4",
  "Conversion of type 'number' to type 'undefined' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 91`] = `
[
  "270:4",
  "Conversion of type 'number' to type 'string' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 92`] = `
[
  "272:2",
  "This comparison appears to be unintentional because the types '"c0"' and '"c2"' have no overlap.",
]
`;

exports[`Types with schemas 93`] = `
[
  "277:2",
  "This comparison appears to be unintentional because the types '"c1" | "c1d"' and '"c2"' have no overlap.",
]
`;

exports[`Types with schemas 94`] = `
[
  "280:29",
  "Argument of type '"t2"' is not assignable to parameter of type '"t0" | "t1"'.",
]
`;

exports[`Types with schemas 95`] = `
[
  "285:4",
  "Conversion of type 'number' to type 'string' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 96`] = `
[
  "286:4",
  "Conversion of type 'number' to type 'undefined' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 97`] = `
[
  "290:4",
  "Conversion of type 'string' to type 'number' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 98`] = `
[
  "291:4",
  "Conversion of type 'string' to type 'undefined' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 99`] = `
[
  "293:2",
  "This comparison appears to be unintentional because the types '"v1" | "v1d"' and '"v2"' have no overlap.",
]
`;

exports[`Types with schemas 100`] = `
[
  "297:2",
  "This comparison appears to be unintentional because the types '"v1" | "v1d"' and '"v2"' have no overlap.",
]
`;

exports[`Types with schemas 101`] = `
[
  "310:4",
  "Conversion of type '[CellOrUndefined<{ readonly t0: { readonly c0: { readonly type: "number"; }; }; readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }, "t1", "c1", number>, CellOrUndefined<...>] | undefined' to type '[string, string]' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 102`] = `
[
  "311:4",
  "Conversion of type '[CellOrUndefined<{ readonly t0: { readonly c0: { readonly type: "number"; }; }; readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }, "t1", "c1d", string>, CellOrUndefined<...>] | undefined' to type '[number, number]' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 103`] = `
[
  "317:4",
  "Conversion of type '[string, string] | undefined' to type '[string, undefined]' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 104`] = `
[
  "318:4",
  "Conversion of type '[string, string] | undefined' to type '[undefined, string]' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 105`] = `
[
  "319:4",
  "Conversion of type '[string, string] | undefined' to type '[undefined, undefined]' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 106`] = `
[
  "320:4",
  "Conversion of type '[DefaultedValueFromSchema<{ readonly v1: { readonly type: "number"; }; readonly v1d: { readonly type: "string"; readonly default: ""; }; }, "v1">, DefaultedValueFromSchema<{ readonly v1: { ...; }; readonly v1d: { ...; }; }, "v1">] | undefined' to type '[string, string]' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 107`] = `
[
  "321:4",
  "Conversion of type '[string, string] | undefined' to type '[number, number]' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 108`] = `
[
  "337:6",
  "Conversion of type '[CellOrUndefined<{ readonly t0: { readonly c0: { readonly type: "number"; }; }; readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }, "t1", "c1", number>, CellOrUndefined<...>] | undefined' to type '[string, string]' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 109`] = `
[
  "338:6",
  "Conversion of type '[CellOrUndefined<{ readonly t0: { readonly c0: { readonly type: "number"; }; }; readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }, "t1", "c1d", string>, CellOrUndefined<...>] | undefined' to type '[number, number]' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 110`] = `
[
  "344:6",
  "Conversion of type '[string, string] | undefined' to type '[string, undefined]' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 111`] = `
[
  "345:6",
  "Conversion of type '[string, string] | undefined' to type '[undefined, string]' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 112`] = `
[
  "346:6",
  "Conversion of type '[string, string] | undefined' to type '[undefined, undefined]' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 113`] = `
[
  "347:6",
  "Conversion of type '[DefaultedValueFromSchema<{ readonly v1: { readonly type: "number"; }; readonly v1d: { readonly type: "string"; readonly default: ""; }; }, "v1">, DefaultedValueFromSchema<{ readonly v1: { ...; }; readonly v1d: { ...; }; }, "v1">] | undefined' to type '[string, string]' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 114`] = `
[
  "348:6",
  "Conversion of type '[string, string] | undefined' to type '[number, number]' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 115`] = `
[
  "358:20",
  "Property 't2' does not exist on type 'TablesFromSchema<{ readonly t0: { readonly c0: { readonly type: "number"; }; }; readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }>'.",
]
`;

exports[`Types with schemas 116`] = `
[
  "359:2",
  "Conversion of type 'CellChange<{ readonly t0: { readonly c0: { readonly type: "number"; }; }; readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }, "t1", "c1", number | undefined> | undefined' to type '[true, number, string]' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 117`] = `
[
  "360:2",
  "Conversion of type 'CellChange<{ readonly t0: { readonly c0: { readonly type: "number"; }; }; readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }, "t1", "c1", number | undefined> | undefined' to type '[true, string, number]' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.",
]
`;

exports[`Types with schemas 118`] = `
[
  "364:20",
  "Property 't2' does not exist on type 'TablesFromSchema<{ readonly t0: { readonly c0: { readonly type: "number"; }; }; readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }>'.",
]
`;

exports[`Types with schemas 119`] = `
[
  "370:20",
  "Property 't2' does not exist on type 'TablesFromSchema<{ readonly t0: { readonly c0: { readonly type: "number"; }; }; readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }>'.",
]
`;

exports[`Types with schemas 120`] = `
[
  "378:20",
  "Property 't2' does not exist on type 'TablesFromSchema<{ readonly t0: { readonly c0: { readonly type: "number"; }; }; readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }>'.",
]
`;

exports[`Types with schemas 121`] = `
[
  "379:2",
  "This comparison appears to be unintentional because the types '"t1"' and '"t0"' have no overlap.",
]
`;

exports[`Types with schemas 122`] = `
[
  "380:2",
  "This comparison appears to be unintentional because the types '"t1"' and '"t2"' have no overlap.",
]
`;

exports[`Types with schemas 123`] = `
[
  "386:20",
  "Property 't2' does not exist on type 'TablesFromSchema<{ readonly t0: { readonly c0: { readonly type: "number"; }; }; readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }>'.",
]
`;

exports[`Types with schemas 124`] = `
[
  "387:2",
  "This comparison appears to be unintentional because the types '"t0" | "t1"' and '"t2"' have no overlap.",
]
`;

exports[`Types with schemas 125`] = `
[
  "391:20",
  "Property 't2' does not exist on type 'TablesFromSchema<{ readonly t0: { readonly c0: { readonly type: "number"; }; }; readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }>'.",
]
`;

exports[`Types with schemas 126`] = `
[
  "393:34",
  "Argument of type '"t2"' is not assignable to parameter of type '"t0" | "t1" | null'.",
]
`;

exports[`Types with schemas 127`] = `
[
  "398:20",
  "Property 't2' does not exist on type 'TablesFromSchema<{ readonly t0: { readonly c0: { readonly type: "number"; }; }; readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }>'.",
]
`;

exports[`Types with schemas 128`] = `
[
  "399:2",
  "This comparison appears to be unintentional because the types '"t1"' and '"t0"' have no overlap.",
]
`;

exports[`Types with schemas 129`] = `
[
  "400:2",
  "This comparison appears to be unintentional because the types '"t1"' and '"t2"' have no overlap.",
]
`;

exports[`Types with schemas 130`] = `
[
  "406:20",
  "Property 't2' does not exist on type 'TablesFromSchema<{ readonly t0: { readonly c0: { readonly type: "number"; }; }; readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }>'.",
]
`;

exports[`Types with schemas 131`] = `
[
  "407:2",
  "This comparison appears to be unintentional because the types '"t0" | "t1"' and '"t2"' have no overlap.",
]
`;

exports[`Types with schemas 132`] = `
[
  "411:20",
  "Property 't2' does not exist on type 'TablesFromSchema<{ readonly t0: { readonly c0: { readonly type: "number"; }; }; readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }>'.",
]
`;

exports[`Types with schemas 133`] = `
[
  "414:35",
  "Argument of type '"t2"' is not assignable to parameter of type '"t0" | "t1" | null'.",
]
`;

exports[`Types with schemas 134`] = `
[
  "424:22",
  "Property 't2' does not exist on type 'TablesFromSchema<{ readonly t0: { readonly c0: { readonly type: "number"; }; }; readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }>'.",
]
`;

exports[`Types with schemas 135`] = `
[
  "425:4",
  "This comparison appears to be unintentional because the types '"t1"' and '"t0"' have no overlap.",
]
`;

exports[`Types with schemas 136`] = `
[
  "426:4",
  "This comparison appears to be unintentional because the types '"t1"' and '"t2"' have no overlap.",
]
`;

exports[`Types with schemas 137`] = `
[
  "427:4",
  "This comparison appears to be unintentional because the types '"r1"' and '"r2"' have no overlap.",
]
`;

exports[`Types with schemas 138`] = `
[
  "435:20",
  "Property 't2' does not exist on type 'TablesFromSchema<{ readonly t0: { readonly c0: { readonly type: "number"; }; }; readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }>'.",
]
`;

exports[`Types with schemas 139`] = `
[
  "436:2",
  "This comparison appears to be unintentional because the types '"t1"' and '"t0"' have no overlap.",
]
`;

exports[`Types with schemas 140`] = `
[
  "437:2",
  "This comparison appears to be unintentional because the types '"t1"' and '"t2"' have no overlap.",
]
`;

exports[`Types with schemas 141`] = `
[
  "444:20",
  "Property 't2' does not exist on type 'TablesFromSchema<{ readonly t0: { readonly c0: { readonly type: "number"; }; }; readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }>'.",
]
`;

exports[`Types with schemas 142`] = `
[
  "445:2",
  "This comparison appears to be unintentional because the types '"t0" | "t1"' and '"t2"' have no overlap.",
]
`;

exports[`Types with schemas 143`] = `
[
  "446:2",
  "This comparison appears to be unintentional because the types '"r1"' and '"r2"' have no overlap.",
]
`;

exports[`Types with schemas 144`] = `
[
  "454:20",
  "Property 't2' does not exist on type 'TablesFromSchema<{ readonly t0: { readonly c0: { readonly type: "number"; }; }; readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }>'.",
]
`;

exports[`Types with schemas 145`] = `
[
  "455:2",
  "This comparison appears to be unintentional because the types '"t0" | "t1"' and '"t2"' have no overlap.",
]
`;

exports[`Types with schemas 146`] = `
[
  "460:20",
  "Property 't2' does not exist on type 'TablesFromSchema<{ readonly t0: { readonly c0: { readonly type: "number"; }; }; readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }>'.",
]
`;

exports[`Types with schemas 147`] = `
[
  "464:20",
  "Property 't2' does not exist on type 'TablesFromSchema<{ readonly t0: { readonly c0: { readonly type: "number"; }; }; readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }>'.",
]
`;

exports[`Types with schemas 148`] = `
[
  "466:32",
  "Argument of type '"t2"' is not assignable to parameter of type '"t0" | "t1" | null'.",
]
`;

exports[`Types with schemas 149`] = `
[
  "472:20",
  "Property 't2' does not exist on type 'TablesFromSchema<{ readonly t0: { readonly c0: { readonly type: "number"; }; }; readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }>'.",
]
`;

exports[`Types with schemas 150`] = `
[
  "473:2",
  "This comparison appears to be unintentional because the types '"t1"' and '"t0"' have no overlap.",
]
`;

exports[`Types with schemas 151`] = `
[
  "474:2",
  "This comparison appears to be unintentional because the types '"t1"' and '"t2"' have no overlap.",
]
`;

exports[`Types with schemas 152`] = `
[
  "475:2",
  "This comparison appears to be unintentional because the types '"r1"' and '"r2"' have no overlap.",
]
`;

exports[`Types with schemas 153`] = `
[
  "482:20",
  "Property 't2' does not exist on type 'TablesFromSchema<{ readonly t0: { readonly c0: { readonly type: "number"; }; }; readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }>'.",
]
`;

exports[`Types with schemas 154`] = `
[
  "483:2",
  "This comparison appears to be unintentional because the types '"t1"' and '"t0"' have no overlap.",
]
`;

exports[`Types with schemas 155`] = `
[
  "484:2",
  "This comparison appears to be unintentional because the types '"t1"' and '"t2"' have no overlap.",
]
`;

exports[`Types with schemas 156`] = `
[
  "491:20",
  "Property 't2' does not exist on type 'TablesFromSchema<{ readonly t0: { readonly c0: { readonly type: "number"; }; }; readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }>'.",
]
`;

exports[`Types with schemas 157`] = `
[
  "492:2",
  "This comparison appears to be unintentional because the types '"t0" | "t1"' and '"t2"' have no overlap.",
]
`;

exports[`Types with schemas 158`] = `
[
  "493:2",
  "This comparison appears to be unintentional because the types '"r1"' and '"r2"' have no overlap.",
]
`;

exports[`Types with schemas 159`] = `
[
  "501:20",
  "Property 't2' does not exist on type 'TablesFromSchema<{ readonly t0: { readonly c0: { readonly type: "number"; }; }; readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }>'.",
]
`;

exports[`Types with schemas 160`] = `
[
  "502:2",
  "This comparison appears to be unintentional because the types '"t0" | "t1"' and '"t2"' have no overlap.",
]
`;

exports[`Types with schemas 161`] = `
[
  "507:20",
  "Property 't2' does not exist on type 'TablesFromSchema<{ readonly t0: { readonly c0: { readonly type: "number"; }; }; readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }>'.",
]
`;

exports[`Types with schemas 162`] = `
[
  "508:2",
  "This comparison appears to be unintentional because the types '"t1"' and '"t0"' have no overlap.",
]
`;

exports[`Types with schemas 163`] = `
[
  "509:2",
  "This comparison appears to be unintentional because the types '"t1"' and '"t2"' have no overlap.",
]
`;

exports[`Types with schemas 164`] = `
[
  "513:20",
  "Property 't2' does not exist on type 'TablesFromSchema<{ readonly t0: { readonly c0: { readonly type: "number"; }; }; readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }>'.",
]
`;

exports[`Types with schemas 165`] = `
[
  "516:36",
  "Argument of type '"t2"' is not assignable to parameter of type '"t0" | "t1" | null'.",
]
`;

exports[`Types with schemas 166`] = `
[
  "527:22",
  "Property 't2' does not exist on type 'TablesFromSchema<{ readonly t0: { readonly c0: { readonly type: "number"; }; }; readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }>'.",
]
`;

exports[`Types with schemas 167`] = `
[
  "528:4",
  "This comparison appears to be unintentional because the types '"t1"' and '"t0"' have no overlap.",
]
`;

exports[`Types with schemas 168`] = `
[
  "529:4",
  "This comparison appears to be unintentional because the types '"t1"' and '"t2"' have no overlap.",
]
`;

exports[`Types with schemas 169`] = `
[
  "530:4",
  "This comparison appears to be unintentional because the types '"r1"' and '"r2"' have no overlap.",
]
`;

exports[`Types with schemas 170`] = `
[
  "531:4",
  "This comparison appears to be unintentional because the types '"c1"' and '"c1d"' have no overlap.",
]
`;

exports[`Types with schemas 171`] = `
[
  "532:4",
  "This comparison appears to be unintentional because the types '"c1"' and '"c2"' have no overlap.",
]
`;

exports[`Types with schemas 172`] = `
[
  "545:22",
  "Property 't2' does not exist on type 'TablesFromSchema<{ readonly t0: { readonly c0: { readonly type: "number"; }; }; readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }>'.",
]
`;

exports[`Types with schemas 173`] = `
[
  "546:4",
  "This comparison appears to be unintentional because the types '"t1"' and '"t0"' have no overlap.",
]
`;

exports[`Types with schemas 174`] = `
[
  "547:4",
  "This comparison appears to be unintentional because the types '"t1"' and '"t2"' have no overlap.",
]
`;

exports[`Types with schemas 175`] = `
[
  "548:4",
  "This comparison appears to be unintentional because the types '"r1"' and '"r2"' have no overlap.",
]
`;

exports[`Types with schemas 176`] = `
[
  "549:4",
  "This comparison appears to be unintentional because the types '"c1" | "c1d"' and '"c2"' have no overlap.",
]
`;

exports[`Types with schemas 177`] = `
[
  "562:22",
  "Property 't2' does not exist on type 'TablesFromSchema<{ readonly t0: { readonly c0: { readonly type: "number"; }; }; readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }>'.",
]
`;

exports[`Types with schemas 178`] = `
[
  "563:4",
  "This comparison appears to be unintentional because the types '"t1"' and '"t0"' have no overlap.",
]
`;

exports[`Types with schemas 179`] = `
[
  "564:4",
  "This comparison appears to be unintentional because the types '"t1"' and '"t2"' have no overlap.",
]
`;

exports[`Types with schemas 180`] = `
[
  "565:4",
  "This comparison appears to be unintentional because the types '"c1"' and '"c1d"' have no overlap.",
]
`;

exports[`Types with schemas 181`] = `
[
  "566:4",
  "This comparison appears to be unintentional because the types '"c1"' and '"c2"' have no overlap.",
]
`;

exports[`Types with schemas 182`] = `
[
  "580:22",
  "Property 't2' does not exist on type 'TablesFromSchema<{ readonly t0: { readonly c0: { readonly type: "number"; }; }; readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }>'.",
]
`;

exports[`Types with schemas 183`] = `
[
  "581:4",
  "This comparison appears to be unintentional because the types '"t1"' and '"t0"' have no overlap.",
]
`;

exports[`Types with schemas 184`] = `
[
  "582:4",
  "This comparison appears to be unintentional because the types '"t1"' and '"t2"' have no overlap.",
]
`;

exports[`Types with schemas 185`] = `
[
  "583:4",
  "This comparison appears to be unintentional because the types '"c1" | "c1d"' and '"c2"' have no overlap.",
]
`;

exports[`Types with schemas 186`] = `
[
  "595:22",
  "Property 't2' does not exist on type 'TablesFromSchema<{ readonly t0: { readonly c0: { readonly type: "number"; }; }; readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }>'.",
]
`;

exports[`Types with schemas 187`] = `
[
  "596:4",
  "This comparison appears to be unintentional because the types '"t1"' and '"t0"' have no overlap.",
]
`;

exports[`Types with schemas 188`] = `
[
  "597:4",
  "This comparison appears to be unintentional because the types '"c1"' and '"c1d"' have no overlap.",
]
`;

exports[`Types with schemas 189`] = `
[
  "598:4",
  "This comparison appears to be unintentional because the types '"c1"' and '"c0"' have no overlap.",
]
`;

exports[`Types with schemas 190`] = `
[
  "599:4",
  "This comparison appears to be unintentional because the types '"t1"' and '"t2"' have no overlap.",
]
`;

exports[`Types with schemas 191`] = `
[
  "600:4",
  "This comparison appears to be unintentional because the types '"r1"' and '"r2"' have no overlap.",
]
`;

exports[`Types with schemas 192`] = `
[
  "601:4",
  "This comparison appears to be unintentional because the types '"c1"' and '"c2"' have no overlap.",
]
`;

exports[`Types with schemas 193`] = `
[
  "619:6",
  "This comparison appears to be unintentional because the types '"c1" | "c1d"' and '"c0"' have no overlap.",
]
`;

exports[`Types with schemas 194`] = `
[
  "621:22",
  "Property 't2' does not exist on type 'TablesFromSchema<{ readonly t0: { readonly c0: { readonly type: "number"; }; }; readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }>'.",
]
`;

exports[`Types with schemas 195`] = `
[
  "622:4",
  "This comparison appears to be unintentional because the types '"t0" | "t1"' and '"t2"' have no overlap.",
]
`;

exports[`Types with schemas 196`] = `
[
  "623:4",
  "This comparison appears to be unintentional because the types '"r1"' and '"r2"' have no overlap.",
]
`;

exports[`Types with schemas 197`] = `
[
  "624:4",
  "This comparison appears to be unintentional because the types '"c0" | "c1" | "c1d"' and '"c2"' have no overlap.",
]
`;

exports[`Types with schemas 198`] = `
[
  "637:22",
  "Property 't2' does not exist on type 'TablesFromSchema<{ readonly t0: { readonly c0: { readonly type: "number"; }; }; readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }>'.",
]
`;

exports[`Types with schemas 199`] = `
[
  "638:4",
  "This comparison appears to be unintentional because the types '"t1"' and '"t0"' have no overlap.",
]
`;

exports[`Types with schemas 200`] = `
[
  "639:4",
  "This comparison appears to be unintentional because the types '"t1"' and '"t2"' have no overlap.",
]
`;

exports[`Types with schemas 201`] = `
[
  "640:4",
  "This comparison appears to be unintentional because the types '"c1"' and '"c1d"' have no overlap.",
]
`;

exports[`Types with schemas 202`] = `
[
  "641:4",
  "This comparison appears to be unintentional because the types '"c1"' and '"c0"' have no overlap.",
]
`;

exports[`Types with schemas 203`] = `
[
  "642:4",
  "This comparison appears to be unintentional because the types '"c1"' and '"c2"' have no overlap.",
]
`;

exports[`Types with schemas 204`] = `
[
  "661:6",
  "This comparison appears to be unintentional because the types '"c1" | "c1d"' and '"c0"' have no overlap.",
]
`;

exports[`Types with schemas 205`] = `
[
  "663:22",
  "Property 't2' does not exist on type 'TablesFromSchema<{ readonly t0: { readonly c0: { readonly type: "number"; }; }; readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }>'.",
]
`;

exports[`Types with schemas 206`] = `
[
  "664:4",
  "This comparison appears to be unintentional because the types '"t0" | "t1"' and '"t2"' have no overlap.",
]
`;

exports[`Types with schemas 207`] = `
[
  "665:4",
  "This comparison appears to be unintentional because the types '"c0" | "c1" | "c1d"' and '"c2"' have no overlap.",
]
`;

exports[`Types with schemas 208`] = `
[
  "676:22",
  "Property 't2' does not exist on type 'TablesFromSchema<{ readonly t0: { readonly c0: { readonly type: "number"; }; }; readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }>'.",
]
`;

exports[`Types with schemas 209`] = `
[
  "677:4",
  "This comparison appears to be unintentional because the types '"t1"' and '"t0"' have no overlap.",
]
`;

exports[`Types with schemas 210`] = `
[
  "678:4",
  "This comparison appears to be unintentional because the types '"t1"' and '"t2"' have no overlap.",
]
`;

exports[`Types with schemas 211`] = `
[
  "679:4",
  "This comparison appears to be unintentional because the types '"r1"' and '"r2"' have no overlap.",
]
`;

exports[`Types with schemas 212`] = `
[
  "685:20",
  "Property 't2' does not exist on type 'TablesFromSchema<{ readonly t0: { readonly c0: { readonly type: "number"; }; }; readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }>'.",
]
`;

exports[`Types with schemas 213`] = `
[
  "686:2",
  "This comparison appears to be unintentional because the types '"t1"' and '"t0"' have no overlap.",
]
`;

exports[`Types with schemas 214`] = `
[
  "687:2",
  "This comparison appears to be unintentional because the types '"t1"' and '"t2"' have no overlap.",
]
`;

exports[`Types with schemas 215`] = `
[
  "691:20",
  "Property 't2' does not exist on type 'TablesFromSchema<{ readonly t0: { readonly c0: { readonly type: "number"; }; }; readonly t1: { readonly c1: { readonly type: "number"; }; readonly c1d: { readonly type: "string"; readonly default: ""; }; }; }>'.",
]
`;

exports[`Types with schemas 216`] = `
[
  "694:45",
  "Argument of type '"c2"' is not assignable to parameter of type '"c1" | "c1d" | null'.",
]
`;

exports[`Types with schemas 217`] = `
[
  "695:45",
  "Argument of type '"c2"' is not assignable to parameter of type '"c0" | "c1" | "c1d" | null'.",
]
`;

exports[`Types with schemas 218`] = `
[
  "696:33",
  "Argument of type '"t2"' is not assignable to parameter of type '"t0" | "t1" | null'.",
]
`;
